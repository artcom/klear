#!/usr/bin/env ruby

require 'rubygems'
require 'bundler/setup'
require 'applix'

$:.unshift File.join(File.dirname(__FILE__), '..', 'lib')
require 'klear'

def usage
  puts <<-HELP
klear usage (version: #{Klear::VERSION} - #{Klear::DATE})

  klear --help
    * this help

  klear [OPTIONS] generate <path to PNG files folder> <klear-file>
    * Generates klear file from png_folder

  klear [OPTIONS] regenerate <klear-file>
    * Regenerates klear file's cache

  klear info <klear-file>
    * Produces report on a klear file.

  OPTIONS
    --silent:[true/false]  : default false
    --overwrite            : force overwriting of existing files
  HELP

  exit
end

Defaults = {
  silent: false,
  fps: 25,
  gamma: 1.0
}

Applix.main(ARGV, Defaults) do
  prolog do |_, opts|
    opts[:help] and usage
    $silent = opts[:silent]
    @app = Klear::FileGenerator.new(opts)
  end
  
  handle(:generate) do |*args, opts|
    (2 <= args.size) or usage
    @app.generate(*args)
  end
  
  handle(:regenerate) do |*args, opts|
    (0 < args.size) or usage
    @app.regenerate(*args)
  end
  
  handle(:info) do |*args, opts|
    (0 < args.size) or usage
    path = args.shift
    choreo = Klear::Choreography.load(path)
    puts choreo.info
  end
  
  handle(:any) {|_, _| usage}
end
